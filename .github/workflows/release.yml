# PRIVATE REGISTRY RELEASE WORKFLOW
# ==================================
# This workflow currently publishes packages to GitHub's private registry.
# All @openzeppelin packages (including dependencies) are resolved from the private registry
# due to organization-level scoping in .npmrc.
#
# TRANSITION TO PUBLIC RELEASE:
# When ready to publish publicly, update this workflow to:
# 1. Remove GITHUB_TOKEN usage for package publishing
# 2. Use NPM_TOKEN for publishing to npm
# 3. Update semantic-release configuration to target npm registry
# 4. Ensure .npmrc is updated (see .npmrc comments)

name: Release

on:
  push:
    branches: [main]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # This is needed for semantic-release to calculate version based on commit history
          persist-credentials: false

      - uses: pnpm/action-setup@v2
        with:
          version: 9.9.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Configure npm authentication for private registry
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

      - name: Install dependencies
        run: pnpm install

      - name: Verify dependencies
        run: pnpm audit
        continue-on-error: true

      # CURRENT: Publishing to GitHub private registry
      # FUTURE: When going public, update to use NPM_TOKEN for npm registry
      - name: Release
        env:
          # Use the built-in GitHub token for GitHub operations and private registry publishing
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # NPM_TOKEN: Will be needed when transitioning to public npm publishing
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          # Disable husky hooks during semantic-release
          HUSKY: 0
          # Increase memory limit for potential build steps during release
          NODE_OPTIONS: '--max-old-space-size=8192'
        run: pnpm semantic-release
