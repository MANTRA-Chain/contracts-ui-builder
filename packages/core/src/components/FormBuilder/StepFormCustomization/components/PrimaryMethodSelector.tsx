import React from 'react';
import { useController } from 'react-hook-form';

import { Label } from '@openzeppelin/transaction-form-renderer';

import type { PrimaryMethodSelectorProps } from '../types';

import { EoaConfiguration } from './EoaConfiguration';

export function PrimaryMethodSelector({
  control,
  adapterAvailable,
  options,
  watchedEoaOption,
  adapter,
}: PrimaryMethodSelectorProps): React.ReactElement {
  // Use controller from react-hook-form to manage the selected value
  const { field } = useController({
    name: 'executionMethodType',
    control,
    defaultValue: 'eoa', // Default to EOA
  });

  return (
    <div className="space-y-4">
      <div>
        <Label className="text-base font-medium mb-1">Transaction Execution</Label>
        <p className="text-muted-foreground text-sm">
          Select how transactions generated by this form should be executed.
        </p>
      </div>

      {adapterAvailable ? (
        <div className="grid grid-cols-3 gap-4">
          {/* Method Selector (left rail) */}
          <div className="rounded-md border overflow-hidden">
            {options.map((option) => (
              <div
                key={option.value}
                className={`
                  px-4 py-3 border-b last:border-0 cursor-pointer text-sm
                  ${field.value === option.value ? 'bg-primary/5 font-medium' : 'hover:bg-muted/50'} 
                  ${option.disabled ? 'opacity-50 cursor-not-allowed' : ''}
                `}
                onClick={() => !option.disabled && field.onChange(option.value)}
              >
                {option.label}
              </div>
            ))}
          </div>

          {/* Configuration area (right panel) */}
          <div className="col-span-2 rounded-md border p-4">
            {field.value === 'eoa' && (
              <EoaConfiguration
                control={control}
                adapter={adapter || null}
                watchedEoaOption={watchedEoaOption}
              />
            )}

            {field.value === 'multisig' && (
              <div className="h-full flex flex-col items-center justify-center py-8">
                <p className="text-muted-foreground text-center text-sm">
                  Multisig (e.g., Safe, Squads) configuration options will be available here in a
                  future update.
                </p>
              </div>
            )}

            {field.value === 'relayer' && (
              <div className="h-full flex flex-col items-center justify-center py-8">
                <p className="text-muted-foreground text-center text-sm">
                  OpenZeppelin transaction relayer configuration options will be available here in a
                  future update.
                </p>
              </div>
            )}
          </div>
        </div>
      ) : (
        <p className="text-muted-foreground text-sm">No blockchain adapter selected.</p>
      )}
    </div>
  );
}

PrimaryMethodSelector.displayName = 'PrimaryMethodSelector';
